{"version":3,"sources":["../../../src/run/remoteBuildCache.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config';\nimport { ModPlatform } from '@expo/config-plugins';\n\nimport { type Options as AndroidRunOptions } from './android/resolveOptions';\nimport { type Options as IosRunOptions } from './ios/XcodeBuild.types';\nimport {\n  calculateEASFingerprintHashAsync,\n  resolveEASRemoteBuildCache,\n  uploadEASRemoteBuildCache,\n} from '../utils/remote-build-cache-providers/eas';\nconst debug = require('debug')('expo:run:remote-build') as typeof console.log;\n\nexport async function resolveRemoteBuildCache(\n  projectRoot: string,\n  {\n    platform,\n    provider,\n    runOptions,\n  }: {\n    platform: ModPlatform;\n    provider?: Required<Required<ExpoConfig>['experiments']>['remoteBuildCache']['provider'];\n    runOptions: AndroidRunOptions | IosRunOptions;\n  }\n): Promise<string | null> {\n  const fingerprintHash = await calculateFingerprintHashAsync(projectRoot, platform, provider);\n  if (!fingerprintHash) {\n    return null;\n  }\n\n  if (provider === 'eas') {\n    return await resolveEASRemoteBuildCache({ platform, fingerprintHash, projectRoot, runOptions });\n  }\n\n  return null;\n}\n\nexport async function uploadRemoteBuildCache(\n  projectRoot: string,\n  {\n    platform,\n    provider,\n    buildPath,\n  }: {\n    platform: ModPlatform;\n    provider?: Required<Required<ExpoConfig>['experiments']>['remoteBuildCache']['provider'];\n    buildPath?: string;\n  }\n): Promise<void> {\n  const fingerprintHash = await calculateFingerprintHashAsync(projectRoot, platform, provider);\n  if (!fingerprintHash) {\n    return;\n  }\n\n  if (provider === 'eas') {\n    await uploadEASRemoteBuildCache({\n      projectRoot,\n      platform,\n      fingerprintHash,\n      buildPath,\n    });\n  }\n}\n\nasync function calculateFingerprintHashAsync(\n  projectRoot: string,\n  platform: ModPlatform,\n  provider?: Required<Required<ExpoConfig>['experiments']>['remoteBuildCache']['provider']\n): Promise<string | null> {\n  if (provider === 'eas') {\n    const easFingerprintHash = await calculateEASFingerprintHashAsync({ projectRoot, platform });\n    if (easFingerprintHash) {\n      return easFingerprintHash;\n    }\n  }\n\n  const Fingerprint = importFingerprintForDev(projectRoot);\n  if (!Fingerprint) {\n    debug('@expo/fingerprint is not installed in the project, skip checking for remote builds');\n    return null;\n  }\n  const fingerprint = await Fingerprint.createFingerprintAsync(projectRoot);\n\n  return fingerprint.hash;\n}\n\nfunction importFingerprintForDev(projectRoot: string): null | typeof import('@expo/fingerprint') {\n  try {\n    return require(require.resolve('@expo/fingerprint', { paths: [projectRoot] }));\n  } catch {\n    return null;\n  }\n}\n"],"names":["resolveRemoteBuildCache","uploadRemoteBuildCache","debug","require","projectRoot","platform","provider","runOptions","fingerprintHash","calculateFingerprintHashAsync","resolveEASRemoteBuildCache","buildPath","uploadEASRemoteBuildCache","easFingerprintHash","calculateEASFingerprintHashAsync","Fingerprint","importFingerprintForDev","fingerprint","createFingerprintAsync","hash","resolve","paths"],"mappings":";;;;;;;;;;;IAYsBA,uBAAuB;eAAvBA;;IAwBAC,sBAAsB;eAAtBA;;;qBA3Bf;AACP,MAAMC,QAAQC,QAAQ,SAAS;AAExB,eAAeH,wBACpBI,WAAmB,EACnB,EACEC,QAAQ,EACRC,QAAQ,EACRC,UAAU,EAKX;IAED,MAAMC,kBAAkB,MAAMC,8BAA8BL,aAAaC,UAAUC;IACnF,IAAI,CAACE,iBAAiB;QACpB,OAAO;IACT;IAEA,IAAIF,aAAa,OAAO;QACtB,OAAO,MAAMI,IAAAA,+BAA0B,EAAC;YAAEL;YAAUG;YAAiBJ;YAAaG;QAAW;IAC/F;IAEA,OAAO;AACT;AAEO,eAAeN,uBACpBG,WAAmB,EACnB,EACEC,QAAQ,EACRC,QAAQ,EACRK,SAAS,EAKV;IAED,MAAMH,kBAAkB,MAAMC,8BAA8BL,aAAaC,UAAUC;IACnF,IAAI,CAACE,iBAAiB;QACpB;IACF;IAEA,IAAIF,aAAa,OAAO;QACtB,MAAMM,IAAAA,8BAAyB,EAAC;YAC9BR;YACAC;YACAG;YACAG;QACF;IACF;AACF;AAEA,eAAeF,8BACbL,WAAmB,EACnBC,QAAqB,EACrBC,QAAwF;IAExF,IAAIA,aAAa,OAAO;QACtB,MAAMO,qBAAqB,MAAMC,IAAAA,qCAAgC,EAAC;YAAEV;YAAaC;QAAS;QAC1F,IAAIQ,oBAAoB;YACtB,OAAOA;QACT;IACF;IAEA,MAAME,cAAcC,wBAAwBZ;IAC5C,IAAI,CAACW,aAAa;QAChBb,MAAM;QACN,OAAO;IACT;IACA,MAAMe,cAAc,MAAMF,YAAYG,sBAAsB,CAACd;IAE7D,OAAOa,YAAYE,IAAI;AACzB;AAEA,SAASH,wBAAwBZ,WAAmB;IAClD,IAAI;QACF,OAAOD,QAAQA,QAAQiB,OAAO,CAAC,qBAAqB;YAAEC,OAAO;gBAACjB;aAAY;QAAC;IAC7E,EAAE,OAAM;QACN,OAAO;IACT;AACF"}